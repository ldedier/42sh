If user tries to close 42sh while there are jobs running
warn first time
second time send SIGHUP to all jobs
===================================================================
What to return in case of max job num exceeded.
(ERROR or STP_CMD_LINE)
Both these value corrupt the current prompt output.
===================================================================
Jobs, fg, bg options!
===================================================================
test when shell is running in bg
===================================================================
Signals are working properly with/without pipes.
Reworked bg, fg (Corrected the running status not being updated after calls to bg, fg.
Seperated signals handlers depending on phase (One for the shell, one for executing simple commands.
To do:
Rework the signal handling code (Test it then clean it up)
Handle the AND_OR nods when ampersand character is present.
Make sure the (jc_enable) condition is present when it needs to be.
Added the '%' character to the builtins.
Test how the shell as well as the jobs reacts to outside signaling (via kill).
builtin commands that end with &
non-interative shell with signals (./42sh < In then ctrl_z or ctrl_c)
TEST TEST TEST
===================================================================
sleep & (leaks)
42sh < in6 launched from within 42sh
===================================================================
sleep 10 || ls then ctrl_z segfault cuz these need to be 2 seperate jobs
===================================================================
fg prints the job command as well
===================================================================
ls & ls && sleep 1 & ls -l
then ps right away.
tcsetpgrp could not put shell back in control
===================================================================
ls & ls -l & ls || sleep 3
weird output (Art abstrait)
===================================================================
Check what happens when ctrl_z ctrl_c with sleep 10 || ls
(interative or not)
===================================================================
Check what happens with outside signaling to sleep 10 || ls and sleep 10 && ls
===================================================================
sending SIGCONT to a background stopped process does not update the status.
===================================================================

